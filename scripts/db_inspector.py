# rebuild_graph.py

import asyncio
import logging
import os
from tqdm import tqdm

# –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –Ω–∞—à–∏ –º–æ–¥—É–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è
from ltm import ltm, LTM_Manager
from graph_manager import graph_manager
from config import GRAPH_FILE_PATH

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')


async def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–µ—Ä–µ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ ChromaDB.
    """
    logging.info("--- üöÄ –ù–ê–ß–ê–õ–û –ü–ï–†–ï–°–ë–û–†–ö–ò –ì–†–ê–§–ê ---")

    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ —Ñ–∞–π–ª–∞ –≥—Ä–∞—Ñ–∞
    if os.path.exists(GRAPH_FILE_PATH):
        logging.warning(f"üóëÔ∏è –ù–∞–π–¥–µ–Ω —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª –≥—Ä–∞—Ñ–∞ '{GRAPH_FILE_PATH}'. –£–¥–∞–ª—è–µ–º –µ–≥–æ –¥–ª—è —á–∏—Å—Ç–æ–π –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏.")
        try:
            os.remove(GRAPH_FILE_PATH)
            # –í–∞–∂–Ω–æ: –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä graph_manager, —á—Ç–æ–±—ã –æ–Ω –∑–∞–≥—Ä—É–∑–∏–ª –ø—É—Å—Ç–æ–π –≥—Ä–∞—Ñ
            # –≠—Ç–æ —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± "—Å–±—Ä–æ—Å–∏—Ç—å" –µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.
            # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã —Ñ—É–Ω–∫—Ü–∏—è reset().
            global graph_manager
            graph_manager = type(graph_manager)(graph_path=GRAPH_FILE_PATH)
            logging.info("‚úÖ –°—Ç–∞—Ä—ã–π –≥—Ä–∞—Ñ —É–¥–∞–ª–µ–Ω, –º–µ–Ω–µ–¥–∂–µ—Ä –≥—Ä–∞—Ñ–∞ —Å–±—Ä–æ—à–µ–Ω.")
        except OSError as e:
            logging.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª –≥—Ä–∞—Ñ–∞: {e}")
            return
    else:
        logging.info("‚ÑπÔ∏è –°—Ç–∞—Ä—ã–π —Ñ–∞–π–ª –≥—Ä–∞—Ñ–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞.")

    # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö "–ö–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã—Ö –ê–∫—Ç–∏–≤–æ–≤" –∏–∑ –±–∞–∑—ã
    logging.info("üß† –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –ö–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã—Ö –ê–∫—Ç–∏–≤–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    try:
        # ltm.assets_collection.get() –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤–µ—Ä–Ω–µ—Ç –≤—Å–µ –∑–∞–ø–∏—Å–∏ (—Å –ª–∏–º–∏—Ç–æ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –Ω–æ –¥–ª—è —Å–æ—Ç–µ–Ω/—Ç—ã—Å—è—á —ç—Ç–æ–≥–æ —Ö–≤–∞—Ç–∏—Ç)
        all_assets = ltm.assets_collection.get(include=["metadatas"])
        asset_ids = all_assets.get('ids', [])

        if not asset_ids:
            logging.error("‚ùå –í –±–∞–∑–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ö–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ–≥–æ –ê–∫—Ç–∏–≤–∞. –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.")
            return

        logging.info(f"üëç –ù–∞–π–¥–µ–Ω–æ {len(asset_ids)} –∞–∫—Ç–∏–≤–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–æ–≤ –∏–∑ ChromaDB: {e}")
        return

    # 3. –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —É–∑–ª–æ–≤ –≥—Ä–∞—Ñ–∞ (–≤–∞–∂–Ω–æ, —Ç.–∫. –º—ã —É–¥–∞–ª–∏–ª–∏ —Å—Ç–∞—Ä—ã–π)
    logging.info("‚úçÔ∏è –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —É–∑–ª–æ–≤ –≥—Ä–∞—Ñ–∞ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ 'stream'...")
    all_stream_records = ltm.stream_collection.get(include=["metadatas"])
    for i, node_id in enumerate(all_stream_records['ids']):
        meta = all_stream_records['metadatas'][i]
        graph_manager.add_node_if_not_exists(node_id, role=meta.get('role'), timestamp=meta.get('timestamp'))
    logging.info(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {graph_manager.graph.number_of_nodes()} —É–∑–ª–æ–≤.")

    # 4. –ò—Ç–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ —Ä–µ–±–µ—Ä –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞–∫—Ç–∏–≤–∞
    logging.info("üîó –ù–∞—á–∞–ª–æ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ —Ä–µ–±–µ—Ä –≥—Ä–∞—Ñ–∞. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...")

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º tqdm –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
    for asset_id in tqdm(asset_ids, desc="–û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–∫—Ç–∏–≤–æ–≤"):
        try:
            # –í—ã–∑—ã–≤–∞–µ–º "—Å–µ–∫—Ä–µ—Ç–Ω—É—é" –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ ltm, –∫–æ—Ç–æ—Ä–∞—è –¥–µ–ª–∞–µ—Ç –∏–º–µ–Ω–Ω–æ —Ç–æ, —á—Ç–æ –Ω–∞–º –Ω—É–∂–Ω–æ!
            await ltm._rebuild_graph_for_asset(asset_id)
        except Exception as e:
            logging.warning(f"‚ö†Ô∏è  –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞–∫—Ç–∏–≤–∞ {asset_id}: {e}")

    logging.info("--- ‚úÖ –ü–ï–†–ï–°–ë–û–†–ö–ê –†–ï–ë–ï–† –ó–ê–í–ï–†–®–ï–ù–ê ---")
    logging.info(
        f"üìä –ù–æ–≤—ã–π –≥—Ä–∞—Ñ —Å–æ–¥–µ—Ä–∂–∏—Ç: {graph_manager.graph.number_of_nodes()} —É–∑–ª–æ–≤ –∏ {graph_manager.graph.number_of_edges()} —Ä—ë–±–µ—Ä.")

    # 5. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≥—Ä–∞—Ñ–∞
    logging.info("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≥—Ä–∞—Ñ–∞ –Ω–∞ –¥–∏—Å–∫...")
    graph_manager.save_graph()
    logging.info(f"üéâ –ù–æ–≤—ã–π –≥—Ä–∞—Ñ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ '{GRAPH_FILE_PATH}'.")


if __name__ == "__main__":
    asyncio.run(main())